# STATUS: 80% - all samples is fully mapped

# - HI: need DX10 sample
# - LOW: declare custom type for DDS_PIXELFORMAT

references:
  - https://en.wikipedia.org/wiki/DirectDraw_Surface
  - http://fileformats.archiveteam.org/wiki/DirectDraw_Surface
  - https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-reference
  - https://docs.microsoft.com/en-us/windows/win32/direct3ddds/dx-graphics-dds-pguide
  - https://www.sweetscape.com/010editor/repository/files/DDS.bt
  - https://github.com/PistonDevelopers/ddsfile

kind: image
name: DirectDraw Surface
extensions: [.dds]
mime: image/vnd-ms.dds
endian: little

magic:
  - offset: 0000
    match: c'DDS '

structs:
  header:
    ascii[4] Signature: c'DDS '

    # header
    u32 Size: 0000007c
    u32 Flags:
      bit b00000000_00000000_00000000_00000001: DDSD_CAPS
      bit b00000000_00000000_00000000_00000010: DDSD_HEIGHT
      bit b00000000_00000000_00000000_00000100: DDSD_WIDTH
      bit b00000000_00000000_00000000_00001000: DDSD_PITCH
      bit b00000000_00000000_00010000_00000000: DDSD_PIXELFORMAT
      bit b00000000_00000000_00100000_00000000: DDSD_MIPMAPCOUNT
      bit b00000000_00000000_10000000_00000000: DDSD_LINEARSIZE
      bit b00000000_10000000_00000000_00000000: DDSD_DEPTH

    u32 Height: ??
    u32 Width: ??
    u32 PitchOrLinearSize: ??
    u32 Depth: ??
    u32 MipMapCount: ??
    u32[11] Reserved1: ??

    if self.Flags & DDSD_PIXELFORMAT:
      # XXX this is type DDS_PIXELFORMAT:
      u32 Pixel format size: ??           # XXX always 32 bytes?
      u32 Pixel format flags:
        bit b00000000_00000000_00000000_00000001: DDPF_ALPHAPIXELS
        bit b00000000_00000000_00000000_00000010: DDPF_ALPHA
        bit b00000000_00000000_00000000_00000100: DDPF_FOURCC
        bit b00000000_00000000_00000000_01000000: DDPF_RGB
        bit b00000000_00000000_00000010_00000000: DDPF_YUV
        bit b00000000_00000010_00000000_00000000: DDPF_LUMINANCE

      ascii[4] Pixel format FourCC: ??    # "DXT1"       # XXX if "DX10", then DirectX10 header follows normal header
      u32 Pixel format GBBitCount: ??
      u32 Pixel format RBitMask: ??
      u32 Pixel format GBitMask: ??
      u32 Pixel format BBitMask: ??
      u32 Pixel format ABitMask: ??

    u32 Caps: ??
    u32 Caps2: ??
    u32 Caps3: ??
    u32 Caps4: ??
    u32 Reserved2: ??

    # opaque image data
    u8[FILE_SIZE - DDS_HEADER.Size - 4] Image data: ??

layout:
  - header DDS_HEADER
