# STATUS: 20%

# - MAX: "data_sub_block[] Image data: ??" with custom type and "data: eos" marker to end slice stream
#     needed to fully parse gif format

# - MID: need to use custom "rgb" type as defined

references:
  - https://www.w3.org/Graphics/GIF/spec-gif89a.txt
  - https://en.wikipedia.org/wiki/GIF
  - https://www.sweetscape.com/010editor/repository/files/GIF.bt
  - https://github.com/HexFiend/HexFiend/blob/master/templates/Images/GIF.tcl
  - https://github.com/martinlindhe/formats/blob/master/parse/image/img_gif.go

kind: image
extensions: [.gif]
mime: image/gif
endian: little

magic:
  - offset: 0000
    match: c'GIF8'

# XXX implement custom types!
types:
  rgb:
    u8 Red: ??
    u8 Green: ??
    u8 Blue: ??

  data_sub_block:
    u8 Size: ??
    u8[self.Size] Image data: ??
    if self.Size == 0:
      data: eos  # FIXME TODO - XXX marks end of stream

structs:
  header:
    ascii[4] Signature 1: c'GIF8'
    u16 Version:
      eq 6137: GIF87a
      eq 6139: GIF89a
      default: invalid
    u16 Logical screen width: ??
    u16 Logical screen height: ??
    u8 ScreenDescriptor:
      bit b0000_0111: GlobalColorTableSize
      bit b0000_1000: Sort
      bit b0111_0000: ColorResolution
      bit b1000_0000: GlobalColorTablePresent
    u8 Background color: ??
    u8 Aspect ratio: ??

    if self.ScreenDescriptor & GlobalColorTablePresent:
      u8[3 * (2 << (self.ScreenDescriptor & 7))] Global Color Table: ??   # FIXME use rgb type. rgb struct is 3 bytes. 4 fields = 12 bytes

  section:
    u8 BlockType:
      eq 2c: BLOCK_IMAGE
      eq 21: BLOCK_EXTENSION
      eq 3b: BLOCK_TRAILER

    label: self.BlockType # XXX implement

    if self.BlockType == BLOCK_EXTENSION:
      label: BLOCK_EXTENSION
      u8 ExtensionType:
        #eq 01: EXT_PLAIN_TEXT
        eq f9: EXT_GRAPHIC_CONTROL
        #eq fe: EXT_COMMENT
        #eq ff: EXT_APPLICATION
      if self.ExtensionType == EXT_GRAPHIC_CONTROL:
        u8 Size: "04"                       # NOTE: should always be 04
        u8 Flags:
          bit b0000_0001: Transparent color
          bit b0000_0010: User input
          bit b0001_1100: Disposal method
          bit b1110_0000: Reserved
        u16 Delay time: ??
        u8 Transparent color index: ??
        u8 Block terminator: "00"

    if self.BlockType == BLOCK_IMAGE:
      label: BLOCK_IMAGE
      u16 Left position: ??
      u16 Top position: ??
      u16 Image width: ??
      u16 Image height: ??
      u8 ImageDescriptor: # aka IMAGEDESCRIPTOR_PACKEDFIELDS
        bit b0000_0111: LocalColorTableSize
        bit b0001_1000: Reserved
        bit b0010_0000: Sort
        bit b0100_0000: Interlace
        bit b1000_0000: LocalColorTablePresent
      if self.ImageDescriptor & LocalColorTablePresent:
        u8[3 * (2 << (self.ImageDescriptor & 7))] Local color table: ?? # XXX RGB type !!!!!!
      u8 LZWMinimumCodeSize: ??   # XXX meaning?

      # XXX series of data blocks. last block is one with Size==0
      # needed to parse gif_87a_002_apples.gif
      u8 DataSize: ??
      u8[self.DataSize] Data: ??
      u8 BlockTerminator: "00"

    if self.BlockType == BLOCK_TRAILER:
      label: BLOCK_TRAILER

layout:
  - header Header
  - section[] Section
