# STATUS: 80% - maps all samples fully except test32bf.bmp (010 also has issue)
#
# IMPORTANT: This implements the more common Windows bitmap format. 
# The OS/2 variants is IGNORED (OS22XBITMAPHEADER etc should be implemented in a separate file).
#
# - LO: custom bgr type for V2 palette (u8 blue,green,red)
# - LO: custom bgrquad type for V3 palette (u8 blue,green,red,reserved)
# - LO: custom CIEXYZTRIPLE for V4,V5

references:
  - https://en.wikipedia.org/wiki/BMP_file_format
  - https://www.fileformat.info/format/bmp/egff.htm
  - https://github.com/synalysis/Grammars/blob/master/bitmap.grammar
  - https://github.com/HexFiend/HexFiend/blob/master/templates/Images/BMP.tcl
  - https://www.sweetscape.com/010editor/repository/files/BMP.bt

kind: image
name: Microsoft Windows Bitmap
extensions: [.bmp]
mime: image/bmp
endian: little

constants:
  u32 WIN2XBITMAPHEADER: "0000000c"  # V2 (Windows 2.x)
  u32 WIN3XBITMAPHEADER: "00000028"  # V3 (Windows 3.x)
  u32 WIN4XBITMAPHEADER: "0000006c"  # V4 (Windows 95/NT 4.0). extends V3 header with additional fields
  u32 BITMAPV5HEADER:    "0000007c"  # V5 (Windows 98/NT 5.0). extends V4 header with additional fields

types:
  # used in V2 palette
  bgr:
    u8 b: ??
    u8 g: ??
    u8 r: ??

  # used in V3+ palette
  #  # XXX use custom type for BGRQUAD (u8 blue,green,red,reserved)
  bgrquad:
    u8 b: ??
    u8 g: ??
    u8 r: ??
    u8 reserved: ??

  #  CIEXYZ is x,y,z in FXPT2DOT30 format
  CIEXYZ:
    u32 x: ?? # XXX FXPT2DOT30 format
    u32 y: ??
    u32 z: ??

  # XXX CIEXYZTRIPLE is r,g,b in CIEXYZ format
  CIEXYZTRIPLE:
    CIEXYZ r: ??
    CIEXYZ g: ??
    CIEXYZ b: ??

structs:
  file_header:
    label: BITMAPFILEHEADER
    ascii[2] Signature: c'BM'
    u32 File size: ??
    u32 Reserved: ??
    u32 Bitmap offset: ??

  info_header:
    label: BITMAPINFOHEADER
    u32 Header size:
      eq 0000_000c: V2 (Windows 2.x)
      eq 0000_0028: V3 (Windows 3.x)
      eq 0000_006c: V4 (Windows 95/NT 4.0)
      eq 0000_007c: V5 (Windows 98/NT 5.0)
      default: invalid

    # V2 (WIN2XBITMAPHEADER) aka BITMAPCOREHEADER
    if self.Header size in (WIN2XBITMAPHEADER):
      i16 Width: ??
      i16 Height: ??
      u16 Color planes: ??
      u16 BitsPerPixel: ??

    # V3 (WIN3XBITMAPHEADER) aka BITMAPINFOHEADER, used by V3, V4, V5
    if self.Header size in (WIN3XBITMAPHEADER, WIN4XBITMAPHEADER, BITMAPV5HEADER):
      i32 Width: ??
      i32 Height: ??
      u16 Color planes: ??
      u16 BitsPerPixel: ??
      u32 CompressionMethod:
        eq 0000_0000: BI_RGB (none)
        eq 0000_0001: BI_RLE8
        eq 0000_0002: BI_RLE4
        eq 0000_0003: BI_BITFIELDS
        eq 0000_0004: BI_JPEG
        eq 0000_0005: BI_PNG
        eq 0000_0006: BI_ALPHABITFIELDS
        eq 0000_000b: BI_CMYK
        eq 0000_000c: BI_CMYKRLE8
        eq 0000_000d: BI_CMYKRLE4
      u32 ImageDataSize: ??
      i32 Horizontal resolution: ??
      i32 Vertical resolution: ??
      u32 Used colors: ??
      u32 Important colors: ??

    # V4 (WIN4XBITMAPHEADER) aka BITMAPV4HEADER, used by V4, V5
    if self.Header size in (WIN4XBITMAPHEADER, BITMAPV5HEADER):
      u32 Red mask: ??
      u32 Green mask: ??
      u32 Blue mask: ??
      u32 Alpha mask: ??
      u32 Color space type: ??

      # CIEXYZTRIPLE bV4Endpoints: ??
      # XXX CIEXYZTRIPLE is r,g,b in CIEXYZ format
      # XXX CIEXYZ is x,y,z in FXPT2DOT30 format
      ### [CIEXYZTRIPLE START] ###
      u32 Red X: ??    # X coordinate of red endpoint
      u32 Red Y: ??    # Y coordinate of red endpoint
      u32 Red Z: ??    # Z coordinate of red endpoint
      u32 Green X: ??  # X coordinate of green endpoint
      u32 Green Y: ??  # Y coordinate of green endpoint
      u32 Green Z: ??  # Z coordinate of green endpoint
      u32 Blue X: ??   # X coordinate of blue endpoint
      u32 Blue Y: ??   # Y coordinate of blue endpoint
      u32 Blue Z: ??   # Z coordinate of blue endpoint
      ### [CIEXYZTRIPLE END] ###

      u32 Gamma Red: ??
      u32 Gamma Green: ??
      u32 Gamma Blue: ??

    # V5 (BITMAPV5HEADER)
    if self.Header size in (BITMAPV5HEADER):
      u32 bV5Intent: ??
      u32 bV5ProfileData: ??
      u32 bV5ProfileSize: ??
      u32 bV5Reserved: ??

    # V2, color palette
    if self.Header size in (WIN2XBITMAPHEADER):
        u8[3 * (1 << self.BitsPerPixel)] Color palette: ??  # XXX need bgr data type, in "u8 B,G,R" format
        u8[self.Height * ( ((self.BitsPerPixel * self.Width + 31) / 32) * 4 )] Image data: ??

    # V3, color table  ... XXX also used in V4 and V5 ???
    if self.Header size in (WIN3XBITMAPHEADER):
      if self.BitsPerPixel notin (16, 24, 32):
        if self.Used colors notin (0):
          u32[self.Used colors] BGRQUAD: ??       # XXX BGRQUAD data type
        if self.Used colors in (0):               # XXX ELSE-statement
          u32[1 << self.BitsPerPixel] BGRQUAD: ?? # XXX BGRQUAD data type

    # V3-V5 image data
    if self.Header size in (WIN3XBITMAPHEADER, WIN4XBITMAPHEADER, BITMAPV5HEADER):
      if self.CompressionMethod notin (0):
        # COMPRESSED image data
        u8[self.ImageDataSize] RLE compressed image data: ??
      if self.CompressionMethod in (0):  # XXX implement "else"
        # UNCOMPRESSED image data
        u8[self.Height * ( ((self.BitsPerPixel * self.Width + 31) / 32) * 4 )] Image data: ??

layout:
  - file_header FILEHEADER
  - info_header DIBHEADER
