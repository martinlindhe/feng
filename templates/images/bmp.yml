# STATUS: 5%
# HIGH figure out v2 format better. 010 seem to have it
# LO: signed integer types
# LO: dont use header size constants compare vs u32 DIB header size "eq" value

references:
  - https://en.wikipedia.org/wiki/BMP_file_format
  - https://github.com/synalysis/Grammars/blob/master/bitmap.grammar
  - https://github.com/HexFiend/HexFiend/blob/master/templates/Images/BMP.tcl
  - https://www.sweetscape.com/010editor/repository/files/BMP.bt
  - https://github.com/martinlindhe/formats/blob/master/parse/image/img_bmp.go

kind: image
extensions: [.bmp]
mime: image/bmp

constants:
  u32 BITMAPCOREHEADER:  "0000000c"  # V1 (OS/2)   aka OS21XBITMAPHEADER (12 bytes)
  u32 OS22XBITMAPHEADER: "00000040"  # V2 (OS/2) OS22XBITMAPHEADER (BITMAPINFOHEADER + another 24 bytes, 64 bytes total)          XXX not fully supported
  u32 BITMAPINFOHEADER:  "00000028"  # V3 (Windows) - BITMAPINFOHEADER (40 bytes)

structs:
  header:
    endian: little
    ascii[2] Signature: c'BM'
    u32 File size: ??
    u32 Reserved: ??            # usually zeroed
    u32 Starting address: ??

    u32 DIB header size:
      eq 0000_000c: BITMAPCOREHEADER (V1)
      eq 0000_0040: OS22XBITMAPHEADER (V2)
      eq 0000_0028: BITMAPINFOHEADER (V3)
      default: invalid # XXX handle other header sizes (V4, V5 ...)

    if self.DIB header size in (BITMAPCOREHEADER):
      u16 Width: ??
      u16 Height: ??
      u16 Color planes: ??
      u16 Bits per pixel: ??

    if self.DIB header size in (BITMAPINFOHEADER, OS22XBITMAPHEADER):  # XXX compare vs u32 DIB header size "eq" value
      u32 Width: ??             # XXX signed integer
      u32 Height: ??            # XXX signed integer
      u16 Color planes: ??      # XXX must be 1
      u16 Bits per pixel: ??
      u32 Compression method:
        eq 0000_0000: BI_RGB (none)
        eq 0000_0001: BI_RLE8
        eq 0000_0002: BI_RLE4
        eq 0000_0003: BI_BITFIELDS
        eq 0000_0004: BI_JPEG
        eq 0000_0005: BI_PNG
        eq 0000_0006: BI_ALPHABITFIELDS
        eq 0000_000b: BI_CMYK
        eq 0000_000c: BI_CMYKRLE8
        eq 0000_000d: BI_CMYKRLE4
      u32 Image data size: ??
      u32 Horizontal resolution: ??  # biXPelsPerMeter, XXX signed integer
      u32 Vertical resolution: ??    # XXX signed integer
      u32 Colors in palette: ??
      u32 Important colors: ??

    # XXX v2... this not shown in hex fiend ....
    if self.DIB header size in (OS22XBITMAPHEADER):
      u16 Unit for the horizontal and vertical resolutions: ??  # XXX should always be 00 ???
      u16 Reserved: ?? # XXX always 00 ???
      u16 An enumerated value indicating the direction in which the bits fill the bitmap: ?? # XXX should always be 0 ?
      u16 Halftoning algorithm:
        eq 0000: none
        eq 0001: Error diffusion
        eq 0002: PANDA
        eq 0003: Super-circle
      u32 Halftoning parameter 1: ??
      u32 Halftoning parameter 2: ??
      u32 Color encoding: ?? # XXX
      u32 Application-defined identifier: ?? # XXX


    # XXX palette follows

    # XXX after palette is image data
    # XXX unhandled format:
    #u8[Starting address:eof] Image data: ??

layout:
  - header Header
