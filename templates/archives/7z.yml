# STATUS: 1%

# - HIGH: ArchiveVersion version: ?? # XXX custom types define!
#         will be very good for readable templates
#         will allow for impl. of built in advanced types like VersionMajorMinor16 (u8,u8)

references:
  - https://en.wikipedia.org/wiki/7z
  - https://github.com/kornelski/7z/blob/master/DOC/7zFormat.txt
  - https://www.sweetscape.com/010editor/repository/files/7ZIP.bt       # very rough

kind: archive
name: 7z Archive
extensions: [.7z]
mime: application/x-7z-compressed
endian: little

magic:
  - offset: 0000
    match: c'7z' bc af 27 1c

types:
  # XXX impl!!!
  ArchiveVersion:       # XXX this should become a built-in standard type "version16" byte 0=major, byte 1=minor
    u8 Major: ??        # 0.3 and 0.4 is seen in 2021
    u8 Minor: ??
    format: "{0}.{1}"    # XXX impl presentation formatting string

  # XXX impl!!!
  StartHeader:
    u64 NextHeaderOffset: ??
    u64 NextHeaderSize: ??
    u32 NextHeaderCRC: ??

structs:
  sig_header:
    # SignatureHeader
    u8[6] Signature: c'7z' bc af 27 1c

    #ArchiveVersion Version: ?? # XXX custom struct define
    u8 Major version: ??
    u8 Minor version: ??

    # XXX impl crc32
    #crc32[NextHeaderOffset.offset:NextHeaderCRC.offset+4] StartHeaderCRC: ??
    u32 Start Header CRC: ??

  start_header:
    # StartHeader Next header: ?? # XXX custom struct define
    u64 NextHeaderOffset: ??
    u64 NextHeaderSize: ??

    # XXX impl crc32
    #crc32[self.offset+4+NextHeaderOffset.value:self.offset+4+NextHeaderOffset.value+NextHeaderSize.value] NextHeaderCRC: ??
    u32 Next Header CRC: ??

    #XXX seek to NextHeaderOffset
    # [PackedStreams]

    # [PackedStreamsForHeaders]
    # XXX

    # u8[self.offset + self.NextHeaderOffset:self.NextHeaderSize] Data: ??  # XXX


layout:
  - sig_header Signature Header
  - start_header Start Header
