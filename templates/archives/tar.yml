# STATUS: 50%
#
# For the extended "ustar" (unix standard tar) format, not the older "tar"

# - MAX: could specify 2 details on a data field: meaning (uint32,crc32), encoding (ascii+octal)
# - LOW: octal ascii parsing and conversion (octal ascii number + unix timestamp) to present OctalModificationTime

references:
  - https://en.wikipedia.org/wiki/Tar_(computing)
  - https://github.com/HexFiend/HexFiend/blob/master/templates/Archives/TAR.tcl

kind: archive
name: Tar (ustar) Archive
extensions: [.tar]
mime: application/x-tar

magic:
  - offset: 0101
    match: c'ustar' 00

structs:
  # XXX each file object start with 512 byte header then untouched data rounded up to a multiple of 512 bytes (zero pad)
  # XXX The end of an archive is marked by at least two consecutive zero-filled records.
  # XXX The final block of an archive is padded out to full length with zeros.
  header:
    ascii[100] Filename: ??
    label: self.Filename
    ascii[8] FileMode: ??               # octal ascii number, like "000644 "
    ascii[8] OwnerID: ??                # octal ascii number
    ascii[8] GroupID: ??                # octal ascii number
    ascii[12] OctalFileSize: ??         # octal ascii number, like "00000000002 "
    ascii[12] OctalModificationTime: ?? # (unix time) octal ascii number, like "14020143052 "
    ascii[8] OctalChecksum: ??          # octal ascii number, like "010577"
    ascii FileType:
      # classic tar:
      eq c'0': Normal file
      eq c'1': Hard link
      eq c'2': Symbolic link
      # ustar extensions:
      eq c'3': Character special
      eq c'4': Block special
      eq c'5': Directory
      eq c'6': FIFO
      eq c'7': Contiguous file
      eq c'g': Global extended header with meta data (POSIX.1-2001)
      eq c'x': Extended header with meta data for the next file in the archive (POSIX.1-2001)
      # A-Z: Vendor specific extensions (POSIX.1-1988): TODO
    ascii[100] LinkedFileName: ??

    # start of ustar header
    ascii[6] Signature: ?? # c'ustar' 00
    ascii[2] Version: ?? # c'00'
    ascii[32] OwnerName: ??
    ascii[32] GroupName: ??
    ascii[8] OctalDeviceMajor: ??   # octal ascii number
    ascii[8] OctalDeviceMinor: ??   # octal ascii number
 #   ascii[155] FilenamePrefix: ??
    u8[167] Reserved: ??    # XXX?

    # BODY XXX:
    u8[ceil(otoi(self.OctalFileSize) / 512.0) * 512] File data: ??
    # XXX pad to 512-byte align

layout:
  - header[] Header
