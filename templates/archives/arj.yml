# STATUS: 80%

references:
  - https://raw.githubusercontent.com/FarGroup/FarManager/master/plugins/multiarc/arc.doc/arj.txt
  - http://fileformats.archiveteam.org/wiki/ARJ
  - https://github.com/martinlindhe/formats/blob/master/parse/archive/arc_arj.go

kind: archive
name: ARJ Archive
extensions: [.arj]
endian: little

magic:
  - offset: 0000
    match: 60 ea

structs:
  header:
    u8[2] Magic: 60 ea
    u16 HeaderSize: ??
    u8 SizeWithExtraData: ??
    u8 ArchiverVersion:
      eq 01: ARJ versions earlier than 0.14
      eq 02: ARJ v 0.14...0.20
      eq 03: ARJ v 1.00...2.22
      eq 04: ARJ v 2.30, X1
      eq 05: ARJ v 2.39a, 2.39b
      eq 06: ARJ v 2.39c...2.41
      eq 07: ARJ v 2.42a...2.50a
      eq 08: ARJ v 2.55...2.61, ARJ/2 v 2.61
      eq 09: ARJ v 2.62, ARJ/2 v 2.62, ARJ32 v 3.00
      eq 0a: ARJ v 2.70 and higher, ARJ/2 v 2.62.10 and higher
      eq 0b: ARJ with UNIX support (2.77/3.10 and higher)
      eq 32: ARJZ with maximum distance up to 32K
      eq 33: ARJZ with maximum distance up to 64K
      eq 64: ARJ32 v 3.00b...3.01
      eq 65: ARJ32 v 3.02 and higher

    u8 MinimumArchiverVersion: ??
    u8 HostOS:
      eq 00: MS-DOS
      eq 01: PRIMOS
      eq 02: Unix
      eq 03: Amiga
      eq 04: Mac-OS
      eq 05: OS/2
      eq 06: Apple GS
      eq 07: Atari ST
      eq 08: NeXT
      eq 09: VAX VMS
      eq 0a: Win95
      eq 0b: Win32
    u8 Flags:
      bit b0000_0010: Garbled
      bit b0000_0100: Ansipage    # aka OLD_SECURED_FLAG
      bit b0000_1000: Arjprot
      bit b0001_0000: Pathsym
      bit b0010_0000: Backup
      bit b0100_0000: Secured
      bit b1000_0000: Altname
    u8 Security version: ??
    u8 File type: "02"            # must equal 2
    u8 Reserved: ??
    if self.ArchiverVersion >= 0x0b && (self.HostOS == Unix || self.HostOS == NeXT):
      time_t_32 Created: ??
      time_t_32 Modified: ??
    else:
      dostimedate Created: ??
      dostimedate Modified: ??
    u32 Secured archive size: ??
    u32 Security envelope offset: ??
    u16 Filespec position in filename: ??
    u16 Security envelope size: ??
    u8 Encryption:
      eq 00: None
      eq 01: Old
      eq 02: New
      eq 03: Reserved
      eq 04: 40 bit key GOST
    u8 Last chapter: ??

    if not(self.SizeWithExtraData, 0x1e, 0x22):
      data: unseen

    if self.SizeWithExtraData == 0x22:
      # extra data
      u8 Protection factor: ??
      u8 Flags (second series): ??
      u8[2] Reserved: ??

    asciiz Archive name: ??
    asciiz Comment: ??

    u32 CRC32: ??
    u16 ExtHeaderSize: ??
    if self.ExtHeaderSize:
      u8[self.ExtHeaderSize] Ext Header data: ?? # XXX decode

  local_header:
    u8[2] Magic: 60 ea
    u16 HeaderSize: ??
    if self.HeaderSize == 0:
      label: '"EofMarker"'
      parse: stop

    u8 SizeWithExtraData: ??
    u8 ArchiverVersion: ??
    u8 MinimumArchiverVersion: ??
    u8 Host OS:
      eq 00: MS-DOS
      eq 01: PRIMOS
      eq 02: Unix
      eq 03: Amiga
      eq 04: Mac-OS
      eq 05: OS/2
      eq 06: Apple GS
      eq 07: Atari ST
      eq 08: NEXT
      eq 09: VAX VMS
      eq 0a: Win95
      eq 0b: Win32
    u8 Flags:
      bit b0000_0001: Garbled
      #bit b0000_0010: Reserved1
      bit b0000_0100: Volume
      bit b0000_1000: Extfile
      bit b0001_0000: Pathsym
      bit b0010_0000: Backup
      #bit b1100_0000: Reserved2
    u8 CompressionMethod:
      eq 00: Stored
      eq 01: Compressed 1a (best)
      eq 02: Compressed 1b
      eq 03: Compressed 1c
      eq 04: Compressed 2 (fastest)
      eq 08: No data, no CRC
      eq 09: No data
    u8 FileType:
      eq 00: Binary
      eq 01: 7-bit text
      eq 03: Directory
      eq 04: Volume label
      eq 05: Chapter label
    u8 Reserved: ??

    if Header.ArchiverVersion >= 0x0b && (Header.HostOS == Unix || Header.HostOS == NeXT):
      time_t_32 Modified: ??
    else:
      dostimedate Modified: ??

    u32 CompressedSize: ??
    u32 Uncompressed size: ??
    u32 Uncompressed CRC: ??
    u16 Filespec position in filename: ??
    u16 File access mode: ??
    u8 First chapter: ??
    u8 Last chapter: ??

    if not(self.SizeWithExtraData, 0x1e, 0x2e):
      data: unseen

    if self.SizeWithExtraData == 0x2e:
      # no extra-data
      u32 Extended file position: ??
      # the following twelve bytes may be present in ARJ 2.62 and above:
      u32 AccessTime: ??
      u32 CreationTime: ??
      u32 OriginalFileSize: ??

    asciiz FileName: ??
    asciiz FileComment: ??

    u32 CRC32: ??
    u16 ExtHeaderSize: ??
    if self.ExtHeaderSize:
      # NOTE: if ext header size > 0, it should follow here. not used in file format
      u8[self.ExtHeaderSize] Ext Header data: ??

    raw:u8[self.CompressedSize] CompressedData: ??

layout:
  - header Header
  - local_header[] LocalHeader
