# STATUS: 20%

# The Resource Interchange File Format (RIFF) is a generic file container format for storing data in tagged
# chunks. It is primarily used to store multimedia such as sound and video, though it may also be used to
# store any arbitrary data.
#
# The Microsoft implementation is mostly known through container formats like AVI, ANI and WAV, which use
# RIFF as their basis.

# Used in:
# - Tony Hawk's Pro Skater HD (2012) PS3 (RIFX format)

references:
  - https://en.wikipedia.org/wiki/Resource_Interchange_File_Format
  - https://en.wikipedia.org/wiki/WebP
  - https://en.wikipedia.org/wiki/Audio_Video_Interleave
  - https://en.wikipedia.org/wiki/WAV
  - https://zenhax.com/viewtopic.php?p=6506#p6506 # FMOD FSB5 extractor script
  - http://wiki.xentax.com/index.php/FMOD_Audio_FSB # FMOD FSB format details
  - http://wiki.xentax.com/index.php/FMOD_Audio_BANK # RIFF FEV FMT format details
  - http://web.archive.org/web/20160622000928/https://www.fmod.org/questions/question/forum-4928/  # FMod FSB4 format

software:
  - ffmpeg or vlc for WAVE, AVI # FIXME, RIFX is unsupported by ffmpeg 6.0, see https://fftrac-bg.ffmpeg.org/ticket/10201
  - https://github.com/gdawg/fsbext   # FMOD sound bank extractor
  - https://gitlab.com/lukasjuhrich/riffinfo
  - http://aezay.dk/aezay/fsbextractor/
  - https://github.com/vgmstream/vgmstream   # FMOD sound bank extractor

kind: media
name: Resource Interchange File Format
#extensions: [.webp, .wav, .avi, .ani, .rmi, .psf]

# XXX mime types:
# "WEBP": "image/webp"
# "WAVE": "audio/x-wav"
# "AVI ": "video/avi"
# "ACON": "application/octet-stream"
# "RMID": "audio/mid"

magic:
  - offset: 0000
    match: c'RIFF'
    endian: little

  - offset: 0000
    match: c'RIFX'
    endian: big

structs:
  header:
    ascii[4] Signature: ??
    u32 Length: ??
    ascii[4] Content: ?? # XXX switch on ascii[4]
    #  eq c'WAVE': Wave
    #  eq c'WEBP': WebP
    #  eq c'AVI ': AVI
    #  eq c'ACON': AnimatedCursor
    #  eq c'RMID': MIDI
    #  eq c'WBNK': Wave bank (Nintendo Switch)
    #  eq c'FONT': Font (Nintendo Switch)
    #  eq c'FEV ': FMod sound bank

  chunk:
    ascii[4] Type: ?? # XXX switch on ascii[4]
    label: self.Type
    u32 Length: ??
    u8[self.Length] Data: ??
    u8[alignment(self.Length, 2)] Padding: ??

layout:
  - header Header
  - chunk[] Chunk
