# STATUS: 90%, extract: ok

# Archive format commonly used on the PS2

# Used in:
# Pro Evolution Soccer 2 (2002, PS2) - has filename table
# Devil May Cry 2 (2003, PS2) - has filename_header, but no filename entries

# Monster Hunter (2004, PS2) - has filename table
# Persona 3 (2006, PS2)
# Persona 4 (2008, PS2)
# Fate/unlimited codes (2008, PS2)
# + many more PS2 titles


# specials:
#
# Pro Evolution Soccer 3 (2003, PS2)
# - data_e.afs has filename_header at 0x000090, file table at 21ea6801
#   value at 0090 may be filename_header
# - pes3 embedded in data_e.afs: 010test.afs - has no filename_header ... but file table at 0b7801
#   filename_header starts at [B771Eh]
# - pes3 embedded n data_e.afs: 160game.afs: filename header at 00278, file table at bb13801

# Pro Evolution Soccer 4 (2004, PS2)
# -  offset 0x00498 # Pro Evolution Soccer 4: e_text.afs ... DIRECTLY AFTER file entries

# Fate/unlimited codes
# - filename struct is different
#

# TODO: figure out how to auto find the correct filename_header offset


references:
  - https://web.archive.org/web/20230517103510/https://wiki.xentax.com/index.php/AFS_AFS

software:
  - https://github.com/MaikelChan/AFSPacker
  - https://forum.xentax.com/viewtopic.php?t=22502  # AFS Explorer
  - https://forum.xentax.com/viewtopic.php?p=184916 # AFS Tool

kind: archive
name: Playstation 2 AFS archive
extensions: [.afs, .bin]
endian: little

magic:
  - offset: 0000
    match: c'AFS' 00

structs:
  header:
    ascii[4] Magic: c'AFS' 00
    u32 FileCount: ??

  file: # file entries start at 0008
    u32 Offset: ??
    u32 Size: ??  # 0 == end of list marker

    #filename: struct(self.index, "Filename", "Name")

    offset: self.Offset
    raw:u8[self.Size] Data: ??
    u8[alignment(self.Size , 2048)] Padding: ??
    offset: restore

  filename_header:
    u32 DirectoryOffset: ??
    u32 DirectoryLength: ?? # 0 == no filename entries

  filename:
    ascii[32] Name: ??
    u16 Year: ??
    u16 Month: ??
    u16 Day: ??
    u16 Hour: ??
    u16 Minute: ??
    u16 Second: ??
    u32 FileSize: ?? # same as file.Size

layout:
  - header Header

  #- offset 0x07FFF8 # Pro Evolution Soccer 2
  #- offset 0x000090  # Pro Evolution Soccer 3: data_e.afs  ... DIRECTLY AFTER file entries
  #- offset 0x00278   # Pro Evolution Soccer 3: 160game.afs  ... DIRECTLY AFTER file entries
  #- offset 0x00498 # Pro Evolution Soccer 4: e_text.afs ... DIRECTLY AFTER file entries
  #- offset 0x00188 # Fate/unlimited codes, bgm.afs
  # Fate/unlimited codes, voice.afs:  maybe 1009:b820  start of file tbl ??? in jap encoding?  the file is strange
  - offset 0x00a78 # Fate/unlimited codes, data.afs: filenames are blank or "stor", so ignore them. each block seem to have their own clump of filenames + data
  - filename_header FilenameHeader

  - offset FilenameHeader.DirectoryOffset
  #- offset 0x0b7801  # Pro Evolution Soccer 3: embedded in data_e.afs: 010test.afs - has no filename_header???
  - filename[Header.FileCount] Filename

  - offset 0x000008
  - file[Header.FileCount] File
