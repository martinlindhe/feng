# STATUS: 30%

# PlayStation 2 BD HD Audio

# Used in various PS2 games, such as:
# Monster Hunter (2004): eff.hd
# Gregory Horror Show: Soul Collector (2003): ngysnd.bin

# MAX need more samples

# XXX in GREGORY_HORROR_SHOW/ngysnd.bin, at 0800, a second file starts, after 00 padding until 0800

references:
  - http://wiki.xentax.com/index.php/PlayStation_2_BD_HD_Audio

software:
  - Awave Studio
  - VGMTrans

kind: audio
name: PlayStation 2 BD HD Audio
extensions: [.bin, .hd]
endian: little

magic:
  - offset: 0000
    match: c'IECS'

structs:

#  Vagi_info:
#    u32 VAG_offset: ??
#    u16 SamplingRate: ?? # XXX map?
#    u8 LoopFlag: ?? # XXX bool ?
#    u8 Reserved: ?? # FF

  chunk:
    ascii[4] Magic: c'IECS'
    u32 Type: # XXX eq on ascii work does not work !
      eq c'Vers': Version
      eq c'Head': Head
      eq c'Vagi': VagInfo
      eq c'Smpl': Sample
      eq c'Sset': SampleSet
      eq c'Prog': Program
      eq c'Sequ': Sequence
      eq c'Midi': Midi
      eq c'Song': Song

    label: self.ChunkType
    u32 Size: ??

    if self.Type == Version:
      u16 Reserved: ??
      u8 MajorVersion: ?? # XXX Major, Minor type. seen "2.0"
      u8 MinorVersion: ??

    if self.Type == Head:
      u32 TotalHeaderSize: ??
      u32 BodySize: ??
      u32 ProgramChunkOffset: ??
      u32 SampleSetChunkOffset: ??
      u32 SampleChunkOffset: ??
      u32 VAG_infoChunkOffset: ??
      u32[7] Padding: ?? # -1

    if self.Type == VagInfo:
      u32 MaxVAGinfoNumber: ?? # XXX count ?
      u8[self.Size - 12 - 4] VAG info param offsets: ?? # XXX decode
      # x bytes - VAG info param offsets
      #num_of_params * {
      #   4 bytes (uint32) - VAG offset
      #   2 bytes (uint16) - sampling rate
      #   1 byte (uint8) - loop flag
      #   1 byte (uint8) - reserved // "0xFF"
      #}
      #u32[self.MaxVAGinfoNumber] vagiInfoOffsets: ??

    if self.Type == Sample:
      u32 MaxSampleNumber: ??
      # TODO decode this:
      #x bytes - sample param offsets
      #x bytes - sample params
      u8[self.Size - 12 - 4] Data: ?? # XXX

    if self.Type == SampleSet:
      u32 MaxSampleSetNumber: ??
      # TODO decode this:
      # x bytes - sample set param offsets
      # x bytes - sample set params
      u8[self.Size - 12 - 4] Data: ?? # XXX

    if self.Type == Program:
      u32 MaxProgramNumber: ??
      # TODO decode this:
      # x bytes - program param offsets
      # x bytes - program params
      u8[self.Size - 12 - 4] Data: ?? # XXX

    if self.Type == Sequence:
      u32 Unknown: ??  # 00 00 06 f0 (1776)
      u32 Unknown2: ?? # 00 00 06 d0 (1744)
      u32 Unknown3: ?? # 00 00 00 30 (48)
      i32[2] Reserved: ?? # -1

    if self.Type == Midi:
     u8[self.Size - 12] Data: ?? # XXX decode

    if self.Type == Song:
      u8[self.Size - 12] Reserved: ??

layout:
  - chunk[] Chunk
