# STATUS: 30%
#
# format used on PS4/PS5 for application packages / updates
#
# TODO: use filenames from data_entry with file_type 02 on output files

references:
  - https://www.psdevwiki.com/ps4/Package_Files

software:
  - https://sites.google.com/site/theleecherman/ps4pkgviewer
  - https://github.com/pearlxcore/PS4-PKG-Tool
  - https://github.com/SKFU/ps5tools/blob/main/cnt.py

kind: system
name:  Sony PS4/PS5 PKG file
extensions: [.pkg]
endian: big

magic:
  - offset: 0000
    match: 7f c'CNT'

structs:
  cnt_header:
    u8[4] Signature: 7f c'CNT'
    u32 pkg_type: ??
    u32 pkg_0x008: ??
    u32 pkg_file_count: ??
    u32 pkg_entry_count: ??       # XXX "file_count". extract this many entries PS5.
    
    u16 pkg_sc_entry_count: ??
    u16 pkg_entry_count_2: ??
  
    u32 pkg_table_offset: ??      # XXX "toc_offset"
    u32 pkg_entry_data_size: ??
    u64 pkg_body_offset: ??       # XXX "offset_1"
    u64 pkg_body_size: ??         # XXX "data_size"
    u64 pkg_content_offset: ??
    u64 pkg_content_size: ??

    # 0x40
    ascii[36] content_id: ??
    u8[12] Padding: ??

    # 0x70
    u32 pkg_drm_type: ??
    u32 pkg_content_type: ??
    u32 pkg_content_flags: ??
    u32 pkg_promote_size: ??
    u32 pkg_version_date: ??
    u32 pkg_version_hash: ??

    u32 pkg_0x088: ??
    u32 pkg_0x08C: ??
    u32 pkg_0x090: ??
    u32 pkg_0x094: ??
    u32 pkg_iro_tag: ??
    u32 pkg_drm_type_version: ??

    u8[96] Padding: ??

    # 0x100
    u8[32] digest_entries1: ??     # sha256 hashes
    u8[32] digest_entries2: ??
    u8[32] digest_table_digest: ??
    u8[32] digest_body_digest: ??
    u8[640] Padding: ??

    # 0x400
    u32 Unknown: ??
    u32 pfs_image_count: ??
    u64 pfs_image_flags: ??
    u64 pfs_image_offset: ??
    u64 pfs_image_size: ??
    u64 mount_image_offset: ??
    u64 mount_image_size: ??
    u64 pkg_size: ??
    u32 pfs_signed_size: ??
    u32 pfs_cache_size: ??

    # 0x440
    u8[32] pfs_image_digest: ??
    u8[32] pfs_signed_digest: ??
    u64 pfs_split_size_nth_0: ??
    u64 pfs_split_size_nth_1: ??
    u8[2896] Padding: ??

    # 0xFE0
    u8[32] pkg_digest: ??

  toc_header:
    offset: CNTHeader.pkg_table_offset
    u32 version: ??
    u32 unknown1: ??
    u32 unknown2: ??
    u32 unknown3: ??
    u32 eof_offset: ??
    u32 toc_size: ??
    u32 unknown4: ??
    u32 unknown5: ??

  data_entry:
    u16 padding1: ??      # always 0 ?
    u8 file_type:
      eq 02: Filenames  # data block with file names for data entries where filename_offset != 0. TODO make use of
    u8 flags: ??              # maybe flags?
    u32 filename_offset: ??
    u64 padding2: ??      # always 0 ?
    u32 data_offset: ??
    u32 data_size: ??
    u64 padding3: ??      # always 0 ?
    offset: self.data_offset
    raw:u8[self.data_size] Data: ?? # XXX use special type for easy extraction
    offset: restore

layout:
  - cnt_header CNTHeader

  - toc_header TOCHeader

  - data_entry[CNTHeader.pkg_entry_count - 1] DataEntry
