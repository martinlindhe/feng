# STATUS: 30%

# TODO MAX: map filenames (subtable mapping issues: they are not proper parent & child). NEED function to fetch value by name from parent struct.

# TODO: calculate checksums
# TODO: support DSi header format (need sample)

references:
  - http://problemkaputt.de/gbatek.htm#dscartridgesencryptionfirmware
  - https://www.sweetscape.com/010editor/repository/files/NDS.bt

software:
  - https://github.com/haroohie-club/NitroPacker/   # NitroPacker unpack -r file.nds -o out_dir

kind: executable
name: Nintendo DS ROM
extensions: [.nds]
endian: little

magic:
  - offset: 00C0
    match: 24 FF AE 51 69 9A A2 21 3D 84 82 0A 84 E4 09 AD 11 24 8B 98 C0 81 7F 21 A3 52 BE 19 93 09 CE 20 10 46 4A 4A F8 27 31 EC 58 C7 E8 33 82 E3 CE BF 85 F4 DF 94 CE 4B 09 C1 94 56 8A C0 13 72 A7 FC 9F 84 4D 73 A3 CA 9A 61 58 97 A3 27 FC 03 98 76 23 1D C7 61 03 04 AE 56 BF 38 84 00 40 A7 0E FD FF 52 FE 03 6F 95 30 F1 97 FB C0 85 60 D6 80 25 A9 63 BE 03 01 4E 38 E2 F9 A2 34 FF BB 3E 03 44 78 00 90 CB 88 11 3A 94 65 C0 7C 63 87 F0 3C AF D6 25 E4 8B 38 0A AC 72 21 D4 F8 07

structs:
  header:
    ascii[12] GameTitle: ??
    ascii[4] GameCode: ??
    ascii[2] MakerCode: ??
    u8 UnitCode:
      eq 00: NDS
      eq 02: NDS+DSi
      eq 03: DSi
    u8 EncryptionSeed: ??
    u8 DeviceCapacity: ??
    u8[7] Reserved: ??
    u8 Reserved: ?? # XXX used on DSi
    u8 NDS region: # XXX other on DSi
      eq 00: Normal
      eq 40: Korea
      eq 80: China
    u8 ROM version: ??
    u8 Autostart: ??    # (Bit2: Skip "Press Button" after Health and Safety) (Also skips boot menu, even in Manual mode & even Start pressed)
    u32 ARM9ROMOffset: ??
    u32 ARM9 entry_address: ??
    u32 ARM9 ram_address: ??
    u32 ARM9ROMSize: ??

    # TODO map arm7 + arm9 roms
    #offset: self.ARM9ROMOffset
    #filename: arm7.bin
    #raw:u8[self.ARM9ROMSize] ARM9 ROM DATA: ??
    #offset: restore

    u32 ARM7ROMOffset: ??
    u32 ARM7 entry_address: ??
    u32 ARM7 ram_address: ??
    u32 ARM7ROMSize: ??

    #offset: self.ARM7ROMOffset
    #filename: arm9.bin
    #raw:u8[self.ARM7ROMSize] ARM7 ROM DATA: ??
    #offset: restore

    filename: # clear filename

    u32 FilenameTableOffset: ??
    u32 FilenameTableSize: ??

    u32 FileAllocationTableOffset: ??
    u32 FileAllocationTableSize: ??

    u32 File ARM9 overlay_offset: ??
    u32 File ARM9 overlay_size: ??
    u32 File ARM7 overlay_offset: ??
    u32 File ARM7 overlay_size: ??
    u32 Port 40001A4h setting for normal commands: ??
    u32 Port 40001A4h setting for KEY1 commands: ??
    u32 Icon/Title offset: ??     # (0=None)
    u16 Secure area checksum: ??  # XXX CRC-16 of [[020h]..00007FFFh]
    u16 Secure Area Delay: ?? # (051Eh=10ms or 0D7Eh=26ms)
    u32 ARM9 Auto Load List Hook RAM Address: ??
    u32 ARM7 Auto Load List Hook RAM Address: ??
    u64 Secure Area Disable: ??
    u32 Total Used ROM size: ??
    u32 ROM Header Size: ??
    u32 Unknown: ??
    u64 Reserved: ?? # used on DSi
    u16 NAND end of ROM area: ??
    u16 NAND start of RW area: ??
    u8[24] Reserved: ??
    u8[16] Reserved: ??

    u8[156] Nintendo Logo: ??

    u16 Nintendo Logo Checksum: ??  # XXX CRC-16 of [0C0h-15Bh], fixed CF56h
    u16 Header Checksum: ??         # XXX CRC-16 of [000h-15Dh]

    u32 Debug rom_offset: ??
    u32 Debug size: ??
    u32 Debug ram_address: ??
    u32 Reserved: ??
    u8[144] Reserved: ??
    u8[3584] Reserved: ??


  fat:
    u32 Offset: ??
    u32 Size: ??

    offset: self.Offset
    raw:u8[self.Size - self.Offset] Data: ??
    u8[alignment(OFFSET, 512)] Padding: ?? # ff
    offset: restore

  fnt_header:
    u32 u1: ??
    u16 u2: ??
    u16 DirectoryCount: ??

  fnt:
    u32 Offset: ??
    u16 FirstFileID: ??
    u16 ParentFolderID: ??

    offset: Header.FilenameTableOffset + self.Offset

    subtable[] Subtable: ??

    offset: restore

  subtable:
    u8 Flags:
      bit b0111_1111: LENGTH
      bit b1000_0000: DIRECTORY
    if self.Flags == 0:
      parse: stop
    ascii[self.Flags & LENGTH] Name: ??
    if self.Flags & DIRECTORY:
      u16 FolderID: ??

    # XXX FAT ID = parent FntHeader.FirstFileID + self.index        XXX get value from parent ... !?
    # XXX calculate offset in FAT table from that ...

layout:
  - header Header

#  - offset Header.FileAllocationTableOffset
#  - fat[Header.FileAllocationTableSize / 8] FAT


  - offset Header.FilenameTableOffset
  - fnt_header FntHeader
  - fnt[FntHeader.DirectoryCount] FileNameTable

