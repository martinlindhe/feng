# STATUS: 40%, extract: broken

# Format used on XBox 360 for XBLA titles


# TODO MAX: files are zlib compressed and start offset calc is wrong !


# TODO:
# read v2 fields, need sample:
#  0x541A 	0x300 (each 0x80 = different locale) 	image 	Additional Display Names
#  0x941A 	0x300 (each 0x80 = different locale) 	image 	Additional Display Descriptions

# TODO read Hash Tables

# TODO MAX: create full path from directory names

# TODO MAX: Files are not always stored in consecutive blocks, you have to find the corresponding hash table record and read the next block number (similar to cluster maps in FAT).



references:
  - https://free60.org/System-Software/Formats/STFS/#live-pirs
  - https://github.com/rene0/xbox360/blob/master/extract360.py

software:
  - https://github.com/Gualdimar/Velocity  # paru -S velocity-xbox360-git
  - http://gael360.free.fr/wxPirs.php

kind: archive
name: XBox 360 LIVE/PIRS archive
endian: big

magic:
  - offset: 0000
    match: c'LIVE'

  - offset: 0000
    match: c'PIRS'

structs:
  header:
    ascii[4] Signature: ??
    u8[0x100] Package Signature: ??
    u8[0x128] Padding: ??

  license:
    i64 LicenseID: ?? # XUID / PUID / console id
    i32 LicenseBits: ??
    i32 LicenseFlags: ??

  header2:
    u8[20] Header SHA1 Hash: ?? # XXX from 0x344 to first hash table
    u32 HeaderSize: ??
    u32 ContentType:
      eq 00000001: Saved Game
      eq 00000002: Marketplace Content
      eq 00000003: Publisher
      eq 00001000: Xbox 360 Title
      eq 00002000: IPTV Pause Buffer
      eq 00004000: Installed Game
      eq 00005000: Xbox Original Game
      eq 00005000: Xbox Title
      eq 00007000: Game on Demand
      eq 00009000: Avatar Item
      eq 00010000: Profile
      eq 00020000: Gamer Picture
      eq 00030000: Theme
      eq 00040000: Cache File
      eq 00050000: Storage Download
      eq 00060000: Xbox Saved Game
      eq 00070000: Xbox Download
      eq 00080000: Game Demo
      eq 00090000: Video
      eq 000A0000: Game Title
      eq 000B0000: Installer
      eq 000C0000: Game Trailer
      eq 000D0000: Arcade Title
      eq 000E0000: XNA
      eq 000F0000: License Store
      eq 00100000: Movie
      eq 00200000: TV
      eq 00300000: Music Video
      eq 00400000: Game Video
      eq 00500000: Podcast Video
      eq 00600000: Viral Video
      eq 02000000: Community Game

    u32 MetadataVersion:
      eq 00000001: V1
      eq 00000002: V2

    u64 ContentSize: ??
    u32 MediaID: ??
    u32 Version: ?? # system/title updates
    u32 BaseVersion: ?? # system/title updates
    u32 TitleID: ??
    u8 Platform:
      eq 02: Xbox 360
      eq 04: PC
      #default: unseen    XXX make work
    u8 Executable Type: ?? # XXX map
    u8 Disc number: ??
    u8 Disc in set: ??
    u32 SaveGameID: ??
    u8[5] ConsoleID: ??
    u8[8] ProfileID: ??

    offset: "0x03A9"
    u32 DescriptorType:
      eq 00000000: STFS # Secure Transacted File System
      eq 00000001: SVOD
    offset: restore

    if self.DescriptorType == STFS:
      u8 VolumeDescriptorSize: "24"
      u8 Reserved: ?? # 0
      u8 BlockSeparation: ??
      u16 File Table Block Count: ??
      u24 FileTableBlockNumber: ?? # points to start of file table
      u8[0x14] Hash Table: ??
      u32 Total Allocated Block Count: ??
      u32 Total Unallocated Block Count: ??

    else:
      u8[0x24] SVOD Volume descriptor: ??    # XXX decode SVOD, need sample!

    u32 FileCount: ??  # XXX
    u64 FileCombinedSize: ??

    offset: "0x03AD"

    u32 Reserved: ??
    if self.MetadataVersion == V1:
      u8[0x4c] Padding: ??
    else:
      u8[0x10] SeriesID: ??
      u8[0x10] SeasonID: ??
      u16 SeasonNumber: ??
      u16 EpisodeNumber: ??
      u8[0x28] Padding: ??

    u8[0x14] DeviceID: ??
    localized_text[18] DisplayName: ?? # 0 = english, 2 = japanese, 4 = german, 6 = french
    localized_text[18] DisplayDescription: ??
    utf16[0x80] PublisherName: ??
    utf16[0x80] TitleName: ??
    u8 TransferFlags:
      bit b00000011: Reserved
      bit b00000100: Deep Link Supported
      bit b00001000: Disable Network Storage
      bit b00010000: Kinect Enabled
      bit b00100000: Move-Only Transfer
      bit b01000000: Device ID Transfer
      bit b10000000: Profile ID Transfer

    u32 ThumbnailSize: ??
    u32 TitleThumbnailSize: ??

    filename: thumbnail.png
    raw:u8[self.ThumbnailSize] ThumbnailData: ?? # PNG
    u8[alignment(self.ThumbnailSize, 8192)] Padding: ?? # XXX if V2 0x300 (each 0x80 = different locale) 	image 	Additional Display Names

    filename: title_thumbnail.png
    raw:u8[self.TitleThumbnailSize] TitleThumbnailData: ?? # PNG
    u8[alignment(self.TitleThumbnailSize, 8192)] Padding: ?? # XXX if V2 0x300 (each 0x80 = different locale) 	image 	Additional Display Descriptions

    # move to file table start
    if peek_i16(0xc032) == 0xFFFF:
      # PIRS type 1
      offset: "0xc000"
    else:
      # PIRS type 2
      offset: "0xd000"

  localized_text:
    utf16[0x80] Text: ??

  file: # each entry is 0x40 bytes
    ascii[40] Name: ??
    filename: self.Name
    u8 Flags:
      bit b00111111: NameLen
      bit b01000000: all blocks are consecutive
      bit b10000000: DIRECTORY # entry is a directory
    le:u24 Blocks: ?? # XXX Number of blocks allocated for file (little endian)
    le:u24 BlocksCopy: ?? # XXX same as self.Blocks ?
    le:u24 StartingBlock: ??  # XXX used to calc offset
    i16 PathIndicator: ?? # XXX indicate what subdirectory file belongs to, -1 == root folder
    u32 Size: ??
    u32 UpdateTime: ?? # XXX dont decode well. see https://github.com/rene0/xbox360/blob/master/extract360.py#L167
    u32 AccessTime: ??

    if self.Flags == 0: # terminator entry
      parse: stop

    offset: 0xC000 + (self.StartingBlock * 0x1000) # XXX not correct
    raw:u8[self.Size] Data: ?? # XXX zlib compressed ?
    offset: restore

layout:
  - header Header
  - license[16] License
  - header2 Header2

  - file[] File
