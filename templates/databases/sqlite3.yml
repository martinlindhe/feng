# STATUS: 5%

# MAX - need varint decoding to progress format
#
# MID: need samples of schema file format V0,V2,V2 and V3

references:
  - https://www.sqlite.org/fileformat2.html
  - https://www.sweetscape.com/010editor/repository/files/SQLite.bt
  - https://www.x-ways.net/winhex/templates/SQLite%20Header.tpl

software:
  - https://www.sqlite.org/cli.html

kind: system
name: SQLite3 database
extensions: [.sqlite, .slt]
endian: big

magic:
  - offset: 0000
    match: c'SQLite format 3' 00

structs:
  db_header:
    ascii[16] Signature: c'SQLite format 3' 00
    u16 PageSize: ??
    u8 Write version: ??
    u8 Read version: ??
    u8 Unused page space: ??
    u8 Max index embed: "40"              # must be 0x40
    u8 Min index embed: "20"              # must be 0x20
    u8 Min table embed: "20"              # must be 0x20
    u32 Change count: ??
    u32 Database size: ??                 # size in pages
    u32 Freelist trunk page: ??
    u32 Freelist page count: ??           # TODO if != 0, parse freelist data. NEED SAMPLE
    u32 Schema cookie: ??
    u32 SchemaFileFormat:
      #eq 0000_0000: V0                    # NEED SAMPLE
      #eq 0000_0001: V1                    # NEED SAMPLE
      #eq 0000_0002: V2                    # NEED SAMPLE
      #eq 0000_0003: V3                    # NEED SAMPLE
      eq 0000_0004: V4
      default: invalid
    if self.SchemaFileFormat != 4:
      data: unseen
    u32 Page cache size: ??
    u32 Top root page: ??
    u32 TextEncoding:
      eq 00000001: UTF-8
      eq 00000002: UTF-16LE
      eq 00000003: UTF-16BE
    u32 User version: ??                  # XXX decode, as used by https://www.sqlite.org/pragma.html#pragma_schema_version
    u32 Incremental vacuum: ??            # XXX 32-bit boolean field, != 0 is true
    u32 Application ID: ??
    u8[20] Reserved: ??
    u32 Version valid for: ??             # XXX https://www.sqlite.org/fileformat2.html#validfor
    u32 SQLite version number: ??         # XXX https://www.sqlite.org/c3ref/c_source_id.html

  btree_header:
    u8 BTreeType:
      eq 02: interior index b-tree page
      eq 05: interior table b-tree page
      eq 0a: leaf index b-tree page
      eq 0d: leaf table b-tree page
      default: invalid
    u16 FreeBlockOffset: ??               # relative to start of this page
    u16 CellCount: ??
    u16 CellContentOffset: ??             # relative to start of this page
    u8 FragmentedFreeBytes: ??
    u32 RightMostPointer: ??

    u16[self.CellCount] CellPointerArray: ??

    # XXX need varint decoding to progress.
    # A variable-length integer or "varint" is a static Huffman encoding of 64-bit twos-complement integers that uses less space for small
    # positive values. A varint is between 1 and 9 bytes in length. The varint consists of either zero or more bytes which have the
    # high-order bit set followed by a single byte with the high-order bit clear, or nine bytes, whichever is shorter. The lower seven
    # bits of each of the first eight bytes and all 8 bits of the ninth byte are used to reconstruct the 64-bit twos-complement integer.
    # Varints are big-endian: bits taken from the earlier byte of the varint are more significant than bits taken from the later bytes.

layout:
  - db_header Header
  - btree_header BTreeHeader
